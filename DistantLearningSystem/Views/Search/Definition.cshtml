@using DistantLearningSystem.Models.DataModels
@model Definition
@using DistantLearningSystem.Models.LogicModels.Managers
@{

    if (Model == null)
    {
        <h2>Определения не обнаружено!</h2>
        return;
    }

    Layout = "~/Views/Shared/Dashboard_Layout.cshtml";
    var student = Model.Student;
    var formulations = Model.Formulations;
    var user = DataManager.DefineUser(Context);
    var conceptName = Model.Concept.Name;
    var imgSrc = Model.Concept.ImgSrc;
    ViewBag.Title = conceptName;
    var references = Model.References.ToList().Where(x => x.Status == 1);
    var conceptId = Model.ConceptId;
    var definitionId = Model.Id;
    var userId;
    bool flag = false;
    if (user != null)
    {
        flag = user.UserType == DistantLearningSystem.Models.UserType.Lecturer && student.StudentGroup.LecturerId == user.Id && Model.Status == 0;
        userId = user.Id;
    }
}

@section Styles
{
    @Styles.Render("~/bundles/DataTablesStyles")
}
@section Scripts
{
    @Scripts.Render("~/bundles/DataTablesScripts")
    <script>
        $(document).ready(function () {
            $('#dataTables-example').dataTable();
        });
    </script>
}

<h2>@Html.ActionLink(conceptName, "Concept", "Search", new{id = Model.ConceptId}, null)</h2>
<section>
    @if (!String.IsNullOrEmpty(imgSrc))
    {
        <div class="user-avatar">
            <a class="magnifier" href="@HtmlManager.DefineImagePath(imgSrc)">
                <div class="" style="margin-top:10px">
                    @HtmlManager.Image(imgSrc + "?w=150", ViewBag.Title)
                </div>
            </a>
        </div>
    }
    <p style="font-size: large"><span>Определение </span>: </p>
    <table class="table table-striped table-bordered table-hover" id="dataTables-example">
        <tbody>
            <tr>
                <td>
                    @Model.Text
                </td>
            </tr>
        </tbody>
    </table>
    <p style="font-size: large"><span>Дата добавления </span>: <span>@String.Format("{0} в {1}", Model.AddedDate.ToShortDateString(), Model.AddedDate.ToShortTimeString())</span></p>
    <p style="font-size: large"><span>Добавлено </span>: <span>@Html.ActionLink(student.LastName + " " + student.Name, "GetStudentInfo", "User", new { userId = student.Id }, null)</span></p>
    <p style="font-size: large"><span>Оценка </span>: <span>@((Model.Status == 0) ? "Не проверено" : Model.Status.ToString())</span></p>
</section>

<div class="row">
    <div class="col-lg-12">
        <div class="action-buttons" style="float:left">
            @if (flag)
            {
                @HtmlManager.AddButton(Html.ActionLink("Поставить оценку", "EditStatus", "Dashboard",
                new { table = 1, id = Model.Id }, null))
            }
        </div>
    </div>
</div>


@HtmlManager.ProccessResultContainer(ViewBag.Result)

@if (formulations != null && formulations.Count != 0)
{
    <h3>Формулировки</h3>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                            <thead>
                                <tr>
                                    <th>Видовое отличиче </th>
                                    <th>Дата добавления </th>
                                    <th>Автор </th>
                                    <th>Статус проверки </th>
                                    <th>Действия </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var formulation in formulations)
                                {
                                    if (formulation.Status == 0 &&
                                        (user == null || !user.HasModeratorAccess() && formulation.StudentId != user.Id))
                                        {
                                            continue;
                                        }                                    
                                    <tr>
                                        <td>
                                            @formulation.SpecificDifference
                                        </td>
                                        <td>
                                            @formulation.AddedDate.ToShortDateString()
                                        </td>
                                        <td>
                                            @Html.ActionLink(student.LastName + " " + student.Name, "GetStudentInfo", "User", new { userId = student.Id }, null)
                                        </td>
                                        <td>
                                            @RevisionStatuses.GetById(formulation.Status).Value
                                        </td>
                                        <td>
                                            @if (user != null && (user.HasModeratorAccess() || user.Id == formulation.StudentId))
                                            {
                                                @HtmlManager.EditIconLink(Url.Action("EditFormulation", "Dashboard", new { id = formulation.Id }))
                                                @HtmlManager.DeleteIconLink(Url.Action("DeleteFormulation", "Dashboard", new { id = formulation.Id, definitionId = formulation.DefinitionId }))
                                            }
                                            else
                                            {
                                                <p>Ваши действия ограничены просмотром</p>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <div class="action-buttons" style="float:left">
            @if (user != null && user.UserType == DistantLearningSystem.Models.UserType.Student)
            {
                @HtmlManager.AddButton(Html.ActionLink("Добавить формулировку", "AddFormulation", "Dashboard", new { id = Model.Id }, null), null, userId, "handleFormClick()")
            }
        </div>
    </div>
</div>

@if (references != null && references.Count() != 0)
{
    <h3>Источники</h3>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                            <thead>
                                <tr>
                                    <th>Название источника </th>
                                    <th>Страницы </th>
                                    <th>Автор </th>
                                    <th>Действия </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var reference in references)
                                {
                                    var source = reference.Source;
                                    var author = reference.Student;
                                    <tr>
                                        <td>
                                            @Html.ActionLink(source.FullTitle, "GetSource", new { id = source.Id })
                                        </td>
                                        <td>
                                            @reference.Pages
                                        </td>
                                        <td>
                                            @Html.ActionLink(author.LastName + " " + author.Name, "GetStudentInfo", "User", new { userId = author.Id }, null)
                                        </td>
                                        <td>
                                            @if (user != null && (user.HasModeratorAccess() || user.Id == reference.StudentId))
                                            {
                                                @HtmlManager.EditIconLink(Url.Action("EditReference", "Dashboard", new { id = Model.Id }))
                                                @HtmlManager.DeleteIconLink(Url.Action("DeleteReference", "Dashboard", new { id = Model.Id }))
                                            }
                                            else
                                            {
                                                <p>Ваши действия ограничены просмотром</p>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}